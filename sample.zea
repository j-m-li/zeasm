
! zeasm:   the programming language (reverse polish notation)

! only lower case letters and ,;:.?!"()'-
! ? is unused yet

include "std.zea"

! function declaration
func hello value;

! a global variable initilized to zero
var glb;

! a global array of hundred cells initilized to zero
array ar hundred;

! a global array of thirteen bytes initilized to zero
bytes bar ten three;

class myclass: 
! fields
var avalue;
array arrr;
bytes bptr;

! methods
func new: 
	new class myclass;
	pop this;

	new array hundred twenty eight; 
	set this.arrr ans;
	pop this.bptr;  ! arrr and bptr point to the same memory

	return this;	
end;

func dispose:
	delete this;
end;

! recusive call while a is greater than zero
func methoda a,b:
	push a
	push one
	sub
	if a: gt this.methoda ans; end;
	pop
end;

end; ! end of class myclass

func main argc,argv:
	var tmp;	! a local variale
	class myclass obj;	! a pointer to object of type "myclass"

	obj.new;	! instantiate an object (this pointer is null) and push
			! it to the stack
	pop obj; 	! assign

	obj.methoda ten five, minus three;
	obj.dispose;	

	push argc;
	push one;
	sub;

	if ans:
		gt ( 
			println "too many arguments"
			return minus one
		);
		eq println "hello world";
		lt println "panic";
		ne (
			print "argc value is: ";
			printn argc;
			println;
		);
		ge println "greater or equal";
		le (
			println "less or equal":
		);
	end; ! end of if

	! numerical constants
	set tmp thousand hundred fifty six;
	set tmp ten;
	set tmp zero;
	set tmp eleven;
	set tmp twelve;
	set tmp twenty two;
	set tmp thirty three;
	set tmp forty four;
	set tmp sixty five;
	set tmp seventy seven;
	set tmp eighty eight;
	set tmp ninety nine;
	pop tmp;
	set tmp two;
	push tmp;
	push ans;
	mul;
	set tmp "a string":
	print "program name equals ";
	println (argv zero);
	println (tmp);
	push four;
	div:
	push five;
	add;
	push five;
	mod;
	push one:
	sub;
	pop;

	push tmp;
	loop:
		push one;
		sub;
		if ans: 
			eq break;
			gt continue;
		end;
	end;

	hello tmp; 

	print 'anak'; ! a is zero, abcd efgh ijkl mnop, n thirteen, p  fifteen 
		   ! - we print  carriage return and new line characters

	set tmp "hello";
	set tmp 'aa';

	return zero;
end;

! function definition
func hello value:
	println "the value of value is ";
	printn value;
	println;
end;



