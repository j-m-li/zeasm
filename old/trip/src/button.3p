
# comment

class button {
field event_ # these fields are common with widget class

field x_
field y_
field w_
field h_
field state_
field win_
field data_
field damage_
field cb_
field cb_data_

method init(me,dpy,x,y,w,h,e,dat)
{
	set x_ x
	set y_ y
	set w_ w
	set h_ h
	set state_ 0
	set event_ e
	set win_ dpy
	set data_ dat
	set damage_ 1
	set cb_ 0
	set cb_data_ 0
}


#this pointer is invalid in this "method"
method start_btn_create(d, cb, cb_data)
{
	var f
	ref button g
	ref display dpy
	set dpy d
	set g {new button}
	set f g.button__event
	g.init g dpy 0 ({dpy.height}-1) 3 1 f "+"
	g.set_callback cb cb_data
	dpy.add g
	return g
}

#this pointer is invalid in this "method"
method button__event(me,ev,x,y,data)
{
	ref button s
	set s me
	return {s.event ev x y data}
}

method is_inside(x,y)
{
	if (x - x_) ? < {return 0};
	if (y - y_) ? < {return 0};
	if ((x_ + w_) - x) ? <~ {return 0};
	if ((y_ + h_) - y) ? <~ {return 0};
	return 1
}

method set_callback(cb, data)
{
	set cb_ cb
	set cb_data_ data
}

method callback(v)
{
	var f
	set f cb_
	if f ? 0 {return 0};
	f null cb_data_ v
	return 0
}

method event(ev,x,y,data)
{
	ref display dpy
	set dpy win_
	if ev ? 0 {
	}, EVENT_MOUSE {
		if (data - 1000) ? < {
			if data ? 0 {
				if {this.is_inside x y} ? > {
					# press
					if state_ ? 0 {
						set state_ 1
						set damage_ 1
						dpy.set_focus this
						this.callback 1
						return 1
					};
				};
			}, <> {
				if (data - 35) ? ~ {
					# move (with no button press)
					if state_ ? <> {
						set state_ 0
						set damage_ 1
					};
				};
			};
		}, >~ {
			# release
			set state_ 0	
			set damage_ 1
		};
	}, EVENT_KEYBOARD {
	}, EVENT_WINDOW {
		set damage_ 1
	}, EVENT_DRAW {
		if damage_ ? <> {
			this.start_btn_draw x_ y_ data_
		};
		set damage_ 0
	};
	return 0;
}

method start_btn_draw(x,y,data)
{
	var bg
	ref display s
	set s win_
	set bg 1
	if (state_) ? > {
		set bg 7
	};
	s.moveto x y
	s.bold
	s.color 0 bg
	s.print "["
	s.color 7 bg
	s.print data
	s.color 0 bg
	s.print "]"
}

} # button 



